services:
  dbsetup:
#    The mssql-tools image seems to only have a "latest" tag, so specifying the digest here to ensure a specific version is used
    image: mcr.microsoft.com/mssql-tools@sha256:62556500522072535cb3df2bb5965333dded9be47000473e9e0f84118e248642
    depends_on:
    - mssql
    environment:
      TRAM_DB_SERVER: "mssql"
      TRAM_SA_PASSWORD: "TestPa55word"
      TRAM_DB: "TramDb"
      TRAM_SCHEMA: "eventuate"
      TRAM_SCHEMA2: "schema1"
    volumes:
    - ./TestDatabase:/scripts
    working_dir: /scripts
    entrypoint: [ "bash", "./entrypoint.sh" ]
  eventuatetramtests:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    depends_on:
    - zookeeper
    - kafka
    - mssql
    - cdcservice
    environment:
      KafkaBootstrapServers: "kafka:29092"
      ConnectionStrings__EventuateTramDbConnection: "Server=mssql;Database=TramDb;User Id=sa;Password=TestPa55word;TrustServerCertificate=True"
    volumes:
    - ./bin/Release/net8.0:/app
    working_dir: /app
    entrypoint: [ "dotnet", "test", "IO.Eventuate.Tram.IntegrationTests.dll", "--verbosity", "normal", "--logger", "trx" ]
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.0.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-setup:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
               cub kafka-ready -b kafka:29092 1 20 && \
               kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 5 --replication-factor 1 --topic TestMessage12Topic && \
               kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 --topic TestMessage34Topic && \
               kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic TestMessageDelayTopic && \
               kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 2 --replication-factor 1 --topic TestPartitionAssignmentTopic1 && \
               kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 2 --replication-factor 1 --topic TestPartitionAssignmentTopic2 && \
               exit'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
  cdcservice:
    image: eventuateio/eventuate-cdc-service:${CDC_SERVICE_DOCKER_VERSION:?You must set the CDC_SERVICE_DOCKER_VERSION environment variable.}
    depends_on:
    - kafka
    - mssql
    environment:
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      
      EVENTUATE_CDC_READER_READER1_TYPE: polling
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:sqlserver://mssql;databaseName=TramDb
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: sa
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: TestPa55word
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: com.microsoft.sqlserver.jdbc.SQLServerDriver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuatelocal/cdc/leader/1

      EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE1_READER: READER1
      EVENTUATE_CDC_PIPELINE_PIPELINE1_EVENTUATEDATABASESCHEMA: eventuate

      EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE2_READER: READER1
      EVENTUATE_CDC_PIPELINE_PIPELINE2_EVENTUATEDATABASESCHEMA: schema1
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-CU18-ubuntu-22.04
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "TestPa55word"
      ACCEPT_EULA: "Y"
      MSSQL_MEMORY_LIMIT_MB: "500"
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "true"
